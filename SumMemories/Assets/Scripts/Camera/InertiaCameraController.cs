using UnityEngine;

[RequireComponent(typeof(Camera))]
public class InertiaCameraController : MonoBehaviour
{
    [Header("????????? ???????????")]
    [Tooltip("???????????????? ??????????? (?? ??????? ?????? ?????? ????????? ?? ???????? ????).")]
    public float dragSensitivity = 1.0f;

    [Tooltip("???????????? ???????? ??????????? ??? ???????.")]
    public float maxInertiaSpeed = 50f;

    [Tooltip("??????????? ?????????? ??????? (??? ????, ??? ??????? ???????????????, ???????? 0–1).")]
    [Range(0.0f, 1.0f)]
    public float inertiaDamping = 0.9f;

    [Tooltip("??????????? ????? ????????, ??? ?????????? ???????? ??????? ????????? ???????????.")]
    public float minSpeedThreshold = 0.1f;

    private Camera _cam;
    private bool _isDragging = false;
    private Vector3 _lastMouseWorldPos;
    private Vector3 _currentVelocity; // ??????? ???????? ??????????? ??????

    void Start()
    {
        _cam = GetComponent<Camera>();
        // ????????, ??? ?????? ????????????? ? ????????????? ?????? (????? ???????? ?? ???????????, ?? ???????).
        if (_cam.orthographic)
        {
            Debug.LogWarning("?????? ????????? ? Orthographic. ?????? ????????? ?? Perspective.");
        }
    }

    void Update()
    {
        HandleDragInput();
        ApplyInertia();
    }

    /// <summary>
    /// ????????? ????? ?? ????: ??????/????? ?????????????? ? ?????????? ????????.
    /// </summary>
    void HandleDragInput()
    {
        // ??????? ??????? ?????? (????????) — ???????? ?????????????.
        if (Input.GetMouseButtonDown(2))
        {
            _isDragging = true;
            // ?????????? ??????? ????? ??????? ? ??????? ??????????? (????? ???????? ?? ????????? Z=0 ??? ????? ?????? ?????????????? ?????????).
            _lastMouseWorldPos = GetMouseWorldPosition();
            _currentVelocity = Vector3.zero;
        }
        // ?????????? ??????? ?????? — ?????????? ??????????????.
        if (Input.GetMouseButtonUp(2))
        {
            _isDragging = false;
            // ????? _currentVelocity ??? ???????? ??, ??? ?? ???????? ?? ????????? ????????
        }

        if (_isDragging)
        {
            // ????????? ????? ??????? ?????? ???????
            Vector3 newMouseWorldPos = GetMouseWorldPosition();
            // ??????? ??????? ????????? — ??????, ?? ??????? ????? ???????? ?????? (? ??????????????? ???????, ????? «???????» ???)
            Vector3 delta = _lastMouseWorldPos - newMouseWorldPos;
            // ????????? ????????????????
            delta *= dragSensitivity;
            // ????????? ????? ??? ???????? ? ??????? ??????
            transform.position += delta;

            // ????????? ??????? ???????? (??? ???????) — ????????? ?? ????.????????
            _currentVelocity = Vector3.ClampMagnitude(delta / Time.deltaTime, maxInertiaSpeed);

            // ????????? ????????? ????????? ???.??????
            _lastMouseWorldPos = newMouseWorldPos;
        }
    }

    /// <summary>
    /// ????? ?????????? ?????? ?????? ????? ???????? ? ??????? ??????.
    /// </summary>
    void ApplyInertia()
    {
        if (!_isDragging)
        {
            // ???? ???????? ?????? ??????, ?????????? ?????????
            if (_currentVelocity.magnitude > minSpeedThreshold)
            {
                // ??????? ?????? ?? ??????? ????????
                transform.position += _currentVelocity * Time.deltaTime;
                // ???????? ????????
                _currentVelocity *= Mathf.Pow(inertiaDamping, Time.deltaTime * 60f);
            }
            else
            {
                // ???????? ???????? ?? ????, ????? ?????? ????? ????????????
                _currentVelocity = Vector3.zero;
            }
        }
    }

    /// <summary>
    /// ??????????? ???????? ??????? ???? ? ??????? ?????????? ?? ????????? Z = cameraDistance.
    /// </summary>
    Vector3 GetMouseWorldPosition()
    {
        // ???????? ??????? ??????? ? ???????? ??????????? (X, Y, Z ?? ?????).
        Vector3 mouseScreenPos = Input.mousePosition;
        // ??? ????? ?????? Z ???, ????? ??? ?? ?????? ??????? ?????? ?????????????? ?????????.
        // ???????????, ??? ???? «?????» (Tilemap) ????? ? ????????? Z = 0. 
        // ????? ?????????? mouseScreenPos.z = distance ?? ?????? ?? Z=0.
        // ???? ?????? ?????????, ????? ????? raycast ? ??????????? ? ??????????.
        // ???? ???????? ?????? ? Plane:
        Plane groundPlane = new Plane(Vector3.up, Vector3.zero);
        Ray ray = _cam.ScreenPointToRay(mouseScreenPos);
        if (groundPlane.Raycast(ray, out float enter))
        {
            return ray.GetPoint(enter);
        }
        // ?? ??????, ???? ??? ??????-?? ?? ??????? ????????? (????????????), ?????????? ??????? ??????? ??????:
        return transform.position;
    }
}
